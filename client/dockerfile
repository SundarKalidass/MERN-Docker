# Step 1: Use the official Node.js image as a base image for the build stage
FROM node:18.16.0-alpine AS build

# Step 2: Set the working directory inside the container
WORKDIR /app

# Step 3: Copy package.json and package-lock.json to the container
COPY package*.json ./

# Step 4: Install dependencies
# Use --force only if necessary; otherwise, it's better to avoid forcing installations.
RUN npm install --force

# Step 5: Copy the rest of the application code to the container
COPY . .

# Step 6: Build the React app with increased memory for larger builds
RUN NODE_OPTIONS="--max-old-space-size=4096" npm run build

# Step 7: Use a lightweight web server to serve the React app
FROM nginx:alpine AS production

# Step 8: Copy the React build output from the build stage
COPY --from=build /app/build /usr/share/nginx/html

# Step 9: Expose port 80 for the application
EXPOSE 80

# Step 10: Start the NGINX server
CMD ["nginx", "-g", "daemon off;"]
